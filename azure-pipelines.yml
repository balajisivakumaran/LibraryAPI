trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  artefactName: 'LibraryAPI'
  buildJobName: 'Build'
  jobName: ''
  deployStageName: ''
  testStageName: ''
  webAppName: 'LibraryManagerAPI'
  azureSubscription: 'Pay-As-You-Go(a09bd86d-baab-4af7-aed3-eaf8114fc4d8)'

stages:
 - stage: "Build"
   jobs:
   - job: 'Build'
     steps:
      - task: DotNetCoreCLI@2
        displayName: 'Dotnet Build'
        inputs:
          command: 'build'
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration)'

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet Unit Test'
        inputs:
          command: 'test'
          projects: '**/*UnitTests/*.csproj'
          arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

      - task: DotNetCoreCLI@2
        displayName: 'Dotnet Publish'
        inputs:
          command: publish
          publishWebProjects: false
          arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        displayName: 'Upload Artefacts'
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: '${{ variables.artefactName }}'

 - template: deploystage.yml
   parameters:
     deployStageName: 'Deploy'
     deployJobName: 'Deploy'
     azureSubscription: ${{ variables.azureSubscription }}
     webAppName: ${{ variables.webAppName }}
     artefactName: ${{ variables.artefactName }}
     
 - template: teststage.yml
   parameters:
     testStageName: 'Test'
     testJobName: 'Test'
     artefactName: ${{ variables.artefactName }}    